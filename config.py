"""
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Anki CSV Builder
"""

from typing import List, Dict, Tuple

# ==========================
# –ú–æ–¥–µ–ª–∏: –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π —Å–ø–∏—Å–æ–∫ + –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –ø–æ–¥–≥—Ä—É–∑–∫–∞ –∏–∑ API
# ==========================

DEFAULT_MODELS: List[str] = [
    "gpt-5",
    "gpt-5-mini",
    "gpt-5-nano",
    "gpt-4.1",
    "gpt-4o",
    "gpt-4o-mini",
    "o3-mini",
]

_PREFERRED_ORDER: Dict[str, int] = {  # —á–µ–º –º–µ–Ω—å—à–µ —á–∏—Å–ª–æ ‚Äî —Ç–µ–º –≤—ã—à–µ –≤ —Å–ø–∏—Å–∫–µ
    "gpt-5": 0,
    "gpt-5-mini": 1,
    "gpt-5-nano": 2,
    "gpt-4.1": 3,
    "gpt-4o": 4,
    "gpt-4o-mini": 5,
    "o3": 6,
    "o3-mini": 7,
}

# –ú–æ–¥–µ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–∫–ª—é—á–∞–µ–º –ø–æ –ø–æ–¥—Å—Ç—Ä–æ–∫–µ –≤ ID (–Ω–∞–º –Ω—É–∂–µ–Ω –∏–º–µ–Ω–Ω–æ —Ç–µ–∫—Å—Ç-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä)
_BLOCK_SUBSTRINGS: Tuple[str, ...] = (
    "audio", "realtime",           # gpt-4o-audio-*, gpt-4o-realtime-*
    "embed", "embedding",          # text-embedding-*
    "whisper", "asr", "transcribe", "speech", "tts",  # ASR/TTS
    "moderation",                  # –º–æ–¥–µ—Ä–∞—Ü–∏—è
    "search",                      # –ø–æ–∏—Å–∫–æ–≤—ã–µ/–≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ
    "vision", "vision-preview",    # —á–∏—Å—Ç–æ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ/–ø—Ä–µ–≤—å—é
    "distill", "distilled",        # –¥–∏—Å—Ç–∏–ª–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–µ—Ü-–º–æ–¥–µ–ª–∏
    "batch", "preview"             # —Å–ª—É–∂–µ–±–Ω—ã–µ/–ø—Ä–µ–≤—å—é/–±–∞—Ç—á–µ–≤—ã–µ
)

# –†–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ —Å–µ–º–µ–π—Å—Ç–≤–∞ (–ø–æ –ø—Ä–µ—Ñ–∏–∫—Å—É) –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
_ALLOWED_PREFIXES: Tuple[str, ...] = ("gpt-5", "gpt-4.1", "gpt-4o", "o3")

# ==========================
# –°–∏–≥–Ω–∞–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞ –∏ –ø—Ä–æ—Ñ–∏–ª–∏ –ø—Ä–æ–º–ø—Ç–æ–≤
# ==========================

SIGNALWORDS_B1: List[str] = [
    "omdat", "maar", "dus", "want", "terwijl", "daarom", "daardoor", "toch"
]

SIGNALWORDS_B2_PLUS: List[str] = [
    "hoewel", "zodat", "doordat", "bovendien", "echter", "bijvoorbeeld", "tenzij", "ondanks",
    "desondanks", "daarentegen", "aangezien", "zodra", "voordat", "nadat", "enerzijds ... anderzijds",
    "niet alleen ... maar ook", "opdat"
]

PROMPT_PROFILES: Dict[str, str] = {
    "strict": "Be literal and concise; avoid figurative language; keep the simplest structure that satisfies CEFR.",
    "balanced": "Natural and clear; minor synonymy allowed if it improves fluency.",
    "exam": "Neutral-formal register; precise; avoid colloquialisms.",
    "creative": "Allow mild figurativeness if it keeps clarity and CEFR constraints.",
}

# ==========================
# L1 —è–∑—ã–∫–∏ –∏ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ CSV
# ==========================

L1_LANGS: Dict[str, Dict[str, str]] = {
    "RU": {"label": "RU", "name": "Russian", "csv_translation": "–ü–µ—Ä–µ–≤–æ–¥", "csv_gloss": "–ü–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞"},
    "EN": {"label": "EN", "name": "English", "csv_translation": "Translation", "csv_gloss": "Word gloss"},
    "ES": {"label": "ES", "name": "Spanish", "csv_translation": "Traducci√≥n", "csv_gloss": "Glosa"},
    "DE": {"label": "DE", "name": "German", "csv_translation": "√úbersetzung", "csv_gloss": "Kurzgloss"},
}

# –î–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏, –µ—Å–ª–∏ –≥–¥–µ-—Ç–æ –æ–∂–∏–¥–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–∞—è –º–∞–ø–∞
CSV_HEADERS_LOCALIZATION = L1_LANGS

# –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–∞—Å—Ç–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ CSV (NL-–∫–æ–ª–æ–Ω–∫–∏)
CSV_HEADERS_FIXED: Dict[str, str] = {
    "nl_word": "NL-—Å–ª–æ–≤–æ",
    "nl_sentence_cloze": "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ NL (—Å cloze)",
    "collocations_nl": "–ö–æ–ª–ª–æ–∫–∞—Ü–∏–∏ (NL)",
    "definition_nl": "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ NL",
}

# ==========================
# –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
# ==========================

PROMPT_SYSTEM: str = ""  # –ø–µ—Ä–µ–º–µ—â—ë–Ω –≤ prompts.py –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏

# ==========================
# –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
# ==========================

DEMO_WORDS: List[Dict[str, str]] = [
    {"woord": "aanraken", "def_nl": "iets met je hand of een ander deel van je lichaam voelen"},
    {"woord": "begrijpen", "def_nl": "snappen wat iets betekent of inhoudt"},
    {"woord": "gillen", "def_nl": "hard en hoog schreeuwen"},
    {"woord": "kloppen", "def_nl": "met regelmaat bonzen of tikken"},
    {"woord": "toestaan", "def_nl": "goedkeuren of laten gebeuren"},
    {"woord": "opruimen", "def_nl": "iets netjes maken door het op zijn plaats te leggen"},
]

# ==========================
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ UI
# ==========================

PAGE_TITLE: str = "Anki CSV/Anki Builder ‚Äî Dutch Cloze Cards"
PAGE_LAYOUT: str = "wide"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ temperature slider
TEMPERATURE_MIN: float = 0.2
TEMPERATURE_MAX: float = 0.8
TEMPERATURE_DEFAULT: float = 0.4
TEMPERATURE_STEP: float = 0.1

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ CSV
CSV_DELIMITER: str = '|'
CSV_LINETERMINATOR: str = '\n'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
PREVIEW_LIMIT: int = 20

# –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É API –∑–∞–ø—Ä–æ—Å–∞–º–∏ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
API_REQUEST_DELAY: float = 0.1

# ==========================
# –ó–∞–≥–æ–ª–æ–≤–∫–∏ CSV
# ==========================

CSV_HEADERS: List[str] = [
    "NL-—Å–ª–æ–≤–æ",
    "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ NL (—Å cloze)",
    "–ü–µ—Ä–µ–≤–æ–¥ RU",
    "–ö–æ–ª–ª–æ–∫–∞—Ü–∏–∏",
    "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ NL",
    "–ü–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞ RU",
]

# ==========================
# –°–æ–æ–±—â–µ–Ω–∏—è –∏ –ø–æ–¥—Å–∫–∞–∑–∫–∏
# ==========================

MESSAGES = {
    # –û–±—â–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏
    "demo_loaded": "üîÅ –î–µ–º–æ-–Ω–∞–±–æ—Ä –∏–∑ 6 —Å–ª–æ–≤ –ø–æ–¥—Å—Ç–∞–≤–ª–µ–Ω",
    "no_api_key": "–£–∫–∞–∂–∏ OPENAI_API_KEY –≤ Secrets –∏–ª–∏ –≤ –ø–æ–ª–µ —Å–ª–µ–≤–∞.",
    "temperature_unavailable": "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è —ç—Ç–æ–π –º–æ–¥–µ–ª–∏; –æ–Ω–∞ –±—É–¥–µ—Ç –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∞.",
    "help_temperature": "–õ—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ ‚Äî gpt-5 (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω); –±–∞–ª–∞–Ω—Å ‚Äî gpt-4.1; –±—ã—Å—Ç—Ä–µ–µ/–¥–µ—à–µ–≤–ª–µ ‚Äî gpt-4o / gpt-5-mini.",
    "help_stream": "Streaming –≤ Responses API: —Ñ–∏–Ω–∞–ª—å–Ω—ã–π JSON –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å—Ç—Ä–∏–º–∞",
    "placeholder_custom_model": "–Ω–∞–ø—Ä–∏–º–µ—Ä, gpt-5-2025-08-07",
    "footer_tips": (
        "–õ–∞–π—Ñ—Ö–∞–∫–∏: 1) –ß–µ–º –ª—É—á—à–µ NL-–¥–µ—Ñ–∏–Ω–∏—Ü–∏–∏ –Ω–∞ –≤—Ö–æ–¥–µ, —Ç–µ–º —Ç–æ—á–Ω–µ–µ –ø—Ä–∏–º–µ—Ä –∏ –≥–ª–æ—Å—Å. "
        "2) –ù–∞ —É—Ä–æ–≤–Ω—è—Ö B1+ –ø—Ä–∏–º–µ—Ä–Ω–æ –ø–æ–ª–æ–≤–∏–Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –±—É–¥–µ—Ç —Å–æ signaalwoorden. "
        "3) –î–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –º–æ–¥–µ–ª–µ–π (gpt-5/o3) —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –∏ –±—É–¥–µ—Ç –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è."
    ),

    # UI —Ç–µ–∫—Å—Ç—ã
    "app_title": "üìò Anki CSV/Anki Builder ‚Äî Dutch Cloze Cards",
    "sidebar_api_header": "üîê API Settings",
    "api_key_label": "OpenAI API Key",
    "model_label": "Model",
    "model_help": "–õ—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ ‚Äî gpt-5 (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω); –±–∞–ª–∞–Ω—Å ‚Äî gpt-4.1; –±—ã—Å—Ç—Ä–µ–µ/–¥–µ—à–µ–≤–ª–µ ‚Äî gpt-4o / gpt-5-mini.",
    "profile_label": "Prompt profile",
    "cefr_label": "CEFR",
    "l1_label": "Your language (L1)",
    "temp_label": "Temperature",
    "csv_header_checkbox": "CSV: –≤–∫–ª—é—á–∏—Ç—å —Å—Ç—Ä–æ–∫—É –∑–∞–≥–æ–ª–æ–≤–∫–∞",
    "csv_header_help": "–°–Ω–∏–º–∏—Ç–µ –≥–∞–ª–æ—á–∫—É, –µ—Å–ª–∏ Anki –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É –∫–∞–∫ –∑–∞–ø–∏—Å—å.",
    "anki_guid_policy_label": "Anki GUID policy",
    "anki_guid_policy_options": [
        "stable (update/skip existing)",
        "unique per export (import as new)"
    ],
    "anki_guid_policy_help": (
        "stable: —Ç–µ –∂–µ –∑–∞–º–µ—Ç–∫–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞—é—Ç—Å—è –∫–∞–∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ/–æ–±–Ω–æ–≤–ª—è–µ–º—ã–µ\n"
        "unique: –∫–∞–∂–¥—ã–π —ç–∫—Å–ø–æ—Ä—Ç –ø–æ–ª—É—á–∞–µ—Ç –Ω–æ–≤—ã–π GUID ‚Äî Anki —Å—á–∏—Ç–∞–µ—Ç –∏—Ö –Ω–æ–≤—ã–º–∏ –∑–∞–º–µ—Ç–∫–∞–º–∏."
    ),
    "uploader_label": "Upload .txt / .md",
    "recognized_rows_title": "üîç –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏",
    "upload_hint": "–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Try demo",
    "try_demo_button": "Try demo",
    "clear_button": "–û—á–∏—Å—Ç–∏—Ç—å",
    "generate_button": "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏",
    "preview_title_fmt": "üìã –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ä—Ç–æ—á–µ–∫ (–ø–µ—Ä–≤—ã–µ {limit})",
    "csv_download_label": "üì• –°–∫–∞—á–∞—Ç—å anki_cards.csv",
    "apkg_download_label": "üß© –°–∫–∞—á–∞—Ç—å –∫–æ–ª–æ–¥—É Anki (.apkg)",
    "apkg_install_hint": "–î–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ .apkg –¥–æ–±–∞–≤—å –≤ requirements.txt —Å—Ç—Ä–æ–∫—É 'genanki' –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.",

    # –°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö (—Ñ–æ—Ä–º–∞—Ç–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏)
    "error_card_processing_fmt": "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–ª–æ–≤–∞ '{woord}': {error}",
    "error_apkg_build_fmt": "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å .apkg: {error}",
}

# ==========================
# Anki: –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –∏ –∏–º–µ–Ω–∞
# ==========================

ANKI_MODEL_ID: int = 1607392319
ANKI_DECK_ID: int = 1970010101
ANKI_MODEL_NAME: str = "Dutch Cloze (L2/L1)"
ANKI_DECK_NAME: str = "Dutch ‚Ä¢ Cloze"

# ==========================
# –®–∞–±–ª–æ–Ω—ã Anki (HTML/CSS)
# ==========================

FRONT_HTML_TEMPLATE: str = """
<div class="card-inner">
  {{cloze:L2_cloze}}
  <div class="hints">
    {{#L1_gloss}}
    <details class="hint">
      <summary>{L1_LABEL}</summary>
      <div class="hint-body">{{L1_gloss}}</div>
    </details>
    {{/L1_gloss}}

    {{#L2_definition}}
    <details class="hint">
      <summary>NL</summary>
      <div class="hint-body">{{L2_definition}}</div>
    </details>
    {{/L2_definition}}
  </div>
</div>
""".strip()

BACK_HTML_TEMPLATE: str = """
<div class="card-inner">
  {{cloze:L2_cloze}}
  <div class="answer">
    {{#L1_sentence}}
    <div class="section ru">{{L1_sentence}}</div>
    {{/L1_sentence}}

    {{#L2_collocations}}
    <div class="section">
      <ul class="colloc" id="colloc-list"></ul>
      <script id="colloc-raw" type="text/plain">{{L2_collocations}}</script>
      <script>
        (function () {
          var rawEl = document.getElementById('colloc-raw');
          if (!rawEl) return;
          var raw = rawEl.textContent || "";
          var items = raw.split(/;\s*|\n+/).map(function (s) { return s.trim(); }).filter(Boolean);
          var ul = document.getElementById('colloc-list');
          if (!ul) return;
          for (var i = 0; i < items.length; i++) {
            var li = document.createElement('li');
            li.textContent = items[i];
            ul.appendChild(li);
          }
        })();
      </script>
    </div>
    {{/L2_collocations}}

    {{#L2_definition}}
    <div class="section def">{{L2_definition}}</div>
    {{/L2_definition}}

    {{#L2_word}}
    <div class="section lemma">
      <span class="lemma-nl">{{L2_word}}</span> ‚Äî <span class="lemma-ru">{{L1_gloss}}</span>
    </div>
    {{/L2_word}}
  </div>
</div>
""".strip()

CSS_STYLING: str = """
/* ===== –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –≤–µ—Ä—Å—Ç–∫–∞ ===== */
:root{
  --fs-base: clamp(18px, 1.2vw + 1.1vh, 28px);
  --fs-sm: calc(var(--fs-base) * .9);
  --fs-lg: calc(var(--fs-base) * 1.12);
  --hl-col:#1976d2;
  --hl-bg:rgba(25,118,210,.14);
}
html, body { height:100%; }
.card{ font-size: var(--fs-base); line-height: 1.55; margin:0; min-height:100vh; display:flex; justify-content:center; align-items:flex-start; background: transparent; }
.card-inner{ width: min(92vw, 80ch); padding: 2.5vh 3vw; }
.answer { margin-top:.75em; }
.section + .section { margin-top:.55em; padding-top:.45em; border-top:1px solid rgba(0,0,0,.14); }
@media (prefers-color-scheme: dark){ .section + .section { border-top-color: rgba(255,255,255,.22); } }
.ru { font-weight:600; font-size: var(--fs-lg); }
.def { font-style: italic; opacity:.9; font-size: var(--fs-sm); }
.lemma { font-weight:600; }
.lemma-nl{ color:var(--hl-col); font-variant: small-caps; letter-spacing:.02em; }
.lemma-ru{ opacity:.9; }
.colloc{ margin:.1em 0 0 1.1em; padding:0; }
.colloc li{ margin:.12em 0; }
.cloze{ color:var(--hl-col); font-weight:700; }
mark.hl{ background:var(--hl-bg); color:inherit; padding:0 .12em; border-radius:.18em; }
.def-hint { margin-top:.5em; }
.def-hint b { opacity:.8; margin-right:.35em; }
.def-toggle{ list-style:none; cursor:pointer; display:inline-block; }
.def-toggle::-webkit-details-marker{ display:none; }
.def-toggle::before{ content: attr(data-closed); text-decoration: underline dotted; }
.def-details[open] .def-toggle::before{ content: attr(data-open); text-decoration:none; opacity:.75; }
img{ max-width:100%; height:auto; }
@media (max-width: 420px){ .card-inner{ width: 94vw; padding: 2vh 3vw; } }
.hints{ margin-top:.6em; display:flex; gap:1em 1.2em; flex-wrap:wrap; align-items:flex-start; }
.hint summary{ cursor:pointer; text-decoration: underline dotted; list-style:none; display:inline-block; }
.hint summary::-webkit-details-marker{ display:none; }
.hint[open] summary{ opacity:.75; text-decoration:none; }
.hint-body{ margin-top:.25em; font-size: var(--fs-sm); }
""".strip()

# ==========================
# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
# ==========================

def get_preferred_order() -> Dict[str, int]:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ—Ä—è–¥–∫–∞ –º–æ–¥–µ–ª–µ–π"""
    return _PREFERRED_ORDER.copy()

def get_block_substrings() -> Tuple[str, ...]:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ç–µ–∂ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö –ø–æ–¥—Å—Ç—Ä–æ–∫"""
    return _BLOCK_SUBSTRINGS

def get_allowed_prefixes() -> Tuple[str, ...]:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ç–µ–∂ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤"""
    return _ALLOWED_PREFIXES

